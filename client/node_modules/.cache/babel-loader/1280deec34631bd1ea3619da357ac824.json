{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/components/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipe = ({\n  food\n}) => {\n  _s();\n\n  console.log(food); // const data = props.food.recipe.totalWeight;\n\n  const params = useParams();\n  const recipe = food.find(item => item.hits.recipe.totalWeight === Number(params.data));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recipe, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/components/Recipe.js"],"names":["React","useState","useEffect","useParams","Recipe","food","console","log","params","recipe","find","item","hits","totalWeight","Number","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD0B,CAEzB;;AACA,QAAMG,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAMM,MAAM,GAAGJ,IAAI,CAACK,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUH,MAAV,CAAiBI,WAAjB,KAAiCC,MAAM,CAACN,MAAM,CAACO,IAAR,CAAzD,CAAf;AAEA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAZD;;GAAMX,M;UAGaD,S;;;KAHbC,M;AAcN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nconst Recipe = ({ food }) => {\n   console.log(food)\n    // const data = props.food.recipe.totalWeight;\n    const params = useParams();\n\n    const recipe = food.find(item => item.hits.recipe.totalWeight === Number(params.data))\n\n    return (\n        <div>\n            <h1></h1>\n        </div>\n    )\n};\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}