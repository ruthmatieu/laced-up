{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const key = '37f23969e9634c3fde3c44a641daf99c';\n  const apiId = '37885762';\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [query, setQuery] = useState('lobster'); // This effect will fire when the component mounts, AND each time \"query\" is updated!\n\n  useEffect(() => {\n    const getRecipe = () => {\n      axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`).then(res => {\n        setData(res.data);\n        console.log(data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getRecipe();\n  }, [query]); // Effect sybced with query; when query changes, fire this effect again\n\n  const changeHandler = e => {\n    setQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: query,\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), data.hits.map(item => {\n      return /*#__PURE__*/_jsxDEV(RecipeList, {\n        image: item.recipe.image,\n        name: item.recipe.label,\n        view: \"View Recipe\",\n        id: item.recipe.totalWeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recipes/:id\",\n          children: /*#__PURE__*/_jsxDEV(Recipe, {\n            food: data.hits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recipes\",\n          component: RecipeList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Home, \"1kNoIvR0veSZjUFyboAd0BQXUfA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/components/Home.js"],"names":["React","Home","key","apiId","data","setData","useState","hits","query","setQuery","useEffect","getRecipe","axios","get","then","res","console","log","catch","err","changeHandler","e","target","value","map","item","recipe","image","label","totalWeight","RecipeList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,GAAG,GAAG,kCAAZ;AACF,QAAMC,KAAK,GAAG,UAAd;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,SAAD,CAAlC,CANc,CAQd;;AACAI,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMC,SAAS,GAAG,MAAM;AACtBC,MAAAA,KAAK,CAACC,GAAN,CAAW,mCAAkCL,KAAM,WAAUL,KAAM,YAAWD,GAAI,EAAlF,EACCY,IADD,CACOC,GAAD,IAAS;AACbV,QAAAA,OAAO,CAACU,GAAG,CAACX,IAAL,CAAP;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD,OAJD,EAKCc,KALD,CAKQC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OAPD;AAQD,KATD;;AAWAR,IAAAA,SAAS;AAEV,GAfQ,EAeN,CAACH,KAAD,CAfM,CAAT,CATc,CAwBF;;AAEZ,QAAMY,aAAa,GAAGC,CAAC,IAAI;AACzBZ,IAAAA,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAGA,sBACF;AAAA,4BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAEQ;AACI,MAAA,KAAK,EAAEf,KADX;AAEI,MAAA,QAAQ,EAAEY;AAFd;AAAA;AAAA;AAAA;AAAA,YAFR,EAOOhB,IAAI,CAACG,IAAL,CAAUiB,GAAV,CAAcC,IAAI,IAAI;AACrB,0BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,MAAL,CAAYC,KADrB;AAEE,QAAA,IAAI,EAAEF,IAAI,CAACC,MAAL,CAAYE,KAFpB;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,EAAE,EAAEH,IAAI,CAACC,MAAL,CAAYG;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAPP,eAkBM;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAE5B;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAEG,IAAI,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEuB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AA8BD;;GA3DQ7B,I;;KAAAA,I;AA6DT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nfunction Home() {\n\n    const key = '37f23969e9634c3fde3c44a641daf99c';\n  const apiId = '37885762';\n\n  const [data, setData] = useState({hits: [] })\n  const [query, setQuery] = useState('lobster')\n\n  // This effect will fire when the component mounts, AND each time \"query\" is updated!\n  useEffect(() => {\n\n    const getRecipe = () => {\n      axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`)\n      .then((res) => {\n        setData(res.data)\n        console.log(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    }\n    \n    getRecipe();\n\n  }, [query]) // Effect sybced with query; when query changes, fire this effect again\n\n  const changeHandler = e => {\n    setQuery(e.target.value)\n  }\n  return (\n<div>\n      <h1>Recipe Search</h1>\n        <input\n            value={query}\n            onChange={changeHandler}\n          />\n        \n      {data.hits.map(item => {\n        return (\n          <RecipeList \n            image={item.recipe.image}\n            name={item.recipe.label}\n            view='View Recipe'\n            id={item.recipe.totalWeight}\n            />\n        )\n      })}\n\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/recipes/:id'>\n            <Recipe food={data.hits}/>\n          </Route>\n          <Route path='/recipes' component={RecipeList}/>\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}