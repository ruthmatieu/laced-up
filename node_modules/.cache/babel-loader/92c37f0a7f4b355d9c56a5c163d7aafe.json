{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/components/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Recipe from \"./Recipe\";\nimport RecipeList from \"./RecipeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  //     const key = '37f23969e9634c3fde3c44a641daf99c';\n  //   const apiId = '37885762';\n  //   const [data, setData] = useState({hits: [] })\n  //   const [query, setQuery] = useState('lobster')\n  //   // This effect will fire when the component mounts, AND each time \"query\" is updated!\n  //   useEffect(() => {\n  //     const getRecipe = () => {\n  //       axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`)\n  //       .then((res) => {\n  //         setData(res.data)\n  //         console.log(data)\n  //       })\n  //       .catch((err) => {\n  //         console.log(err)\n  //       })\n  //     }\n  //     getRecipe();\n  //   }, [query]) // Effect sybced with query; when query changes, fire this effect again\n  //   const changeHandler = e => {\n  //     setQuery(e.target.value)\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }, this);\n}\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/components/Home.js"],"names":["React","useState","useEffect","Route","Switch","useParams","axios","Recipe","RecipeList","Home"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,IAAT,GAAgB;AAEhB;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACE,sBACF;AAAA;AAAA;AAAA;AAAA,UADE;AAoBD;;KAjDQA,I;AAmDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Recipe from \"./Recipe\";\nimport RecipeList from \"./RecipeList\";\n\nfunction Home() {\n\n//     const key = '37f23969e9634c3fde3c44a641daf99c';\n//   const apiId = '37885762';\n\n//   const [data, setData] = useState({hits: [] })\n//   const [query, setQuery] = useState('lobster')\n\n//   // This effect will fire when the component mounts, AND each time \"query\" is updated!\n//   useEffect(() => {\n\n//     const getRecipe = () => {\n//       axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`)\n//       .then((res) => {\n//         setData(res.data)\n//         console.log(data)\n//       })\n//       .catch((err) => {\n//         console.log(err)\n//       })\n//     }\n    \n//     getRecipe();\n\n//   }, [query]) // Effect sybced with query; when query changes, fire this effect again\n\n//   const changeHandler = e => {\n//     setQuery(e.target.value)\n//   }\n  return (\n<div>\n      {/* <h1>Recipe Search</h1>\n        <input\n            value={query}\n            onChange={changeHandler}\n          />\n        \n      {data.hits.map(item => {\n        return (\n          <RecipeList \n            image={item.recipe.image}\n            name={item.recipe.label}\n            view='View Recipe'\n            id={item.recipe.label}\n            />\n        )\n      })} */}\n    </div>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}