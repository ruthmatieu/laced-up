{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './components/Home';\nimport Recipe from \"./components/Recipe\";\nimport RecipeList from \"./components/RecipeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const key = '37f23969e9634c3fde3c44a641daf99c';\n  const apiId = '37885762';\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [query, setQuery] = useState('lobster'); // This effect will fire when the component mounts, AND each time \"query\" is updated!\n  // useEffect(() => {\n  //   const getRecipe = () => {\n  //     axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`)\n  //     .then((res) => {\n  //       setData(res.data)\n  //       console.log(data)\n  //     })\n  //     .catch((err) => {\n  //       console.log(err)\n  //     })\n  //   }\n  //   getRecipe();\n  // }, [query]) // Effect sybced with query; when query changes, fire this effect again\n  // const changeHandler = e => {\n  //   setQuery(e.target.value)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recipes/:dish\",\n        children: /*#__PURE__*/_jsxDEV(Recipe, {\n          food: data.hits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recipes\",\n        component: RecipeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"3E9xpb+f7aSyzvrGcgy0l7iTOys=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/App.js"],"names":["React","useState","useEffect","Route","Switch","useParams","axios","Home","Recipe","RecipeList","App","key","apiId","data","setData","hits","query","setQuery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,GAAG,GAAG,kCAAZ;AACA,QAAMC,KAAK,GAAG,UAAd;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAACc,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,SAAD,CAAlC,CANgB,CAQhB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;;AACA,sBAEI;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEM;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEM,IAAI,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAEN;AAAlC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYD,CAzCD;;GAAMC,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './components/Home';\nimport Recipe from \"./components/Recipe\";\nimport RecipeList from \"./components/RecipeList\";\n\nconst App = () => {\n\n  const key = '37f23969e9634c3fde3c44a641daf99c';\n  const apiId = '37885762';\n\n  const [data, setData] = useState({hits: [] })\n  const [query, setQuery] = useState('lobster')\n\n  // This effect will fire when the component mounts, AND each time \"query\" is updated!\n  // useEffect(() => {\n\n  //   const getRecipe = () => {\n  //     axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`)\n  //     .then((res) => {\n  //       setData(res.data)\n  //       console.log(data)\n  //     })\n  //     .catch((err) => {\n  //       console.log(err)\n  //     })\n  //   }\n    \n  //   getRecipe();\n\n  // }, [query]) // Effect sybced with query; when query changes, fire this effect again\n\n  // const changeHandler = e => {\n  //   setQuery(e.target.value)\n  // }\n  return (\n\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/recipes/:dish'>\n            <Recipe food={data.hits}/>\n          </Route>\n          <Route path='/recipes' component={RecipeList}/>\n        </Switch>\n      </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}