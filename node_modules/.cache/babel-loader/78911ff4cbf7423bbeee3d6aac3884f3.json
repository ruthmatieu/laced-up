{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './components/Home';\nimport Recipe from \"./components/Recipe\";\nimport RecipeList from \"./components/RecipeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const key = '37f23969e9634c3fde3c44a641daf99c';\n  const apiId = '37885762';\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [query, setQuery] = useState('lobster'); // This effect will fire when the component mounts, AND each time \"query\" is updated!\n\n  useEffect(() => {\n    const getRecipe = () => {\n      axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`).then(res => {\n        setData(res.data);\n        console.log(data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getRecipe();\n  }, [query]); // Effect sybced with query; when query changes, fire this effect again\n\n  const changeHandler = e => {\n    setQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: query,\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), data.hits.map(item => {\n      return /*#__PURE__*/_jsxDEV(RecipeList, {\n        image: item.recipe.image,\n        name: item.recipe.label,\n        view: \"View Recipe\",\n        id: item.recipe.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/recipes/:dish\",\n        children: /*#__PURE__*/_jsxDEV(Recipe, {\n          food: data.hits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        component: RecipeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"1kNoIvR0veSZjUFyboAd0BQXUfA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/practice-final/react-routing-tut/src/App.js"],"names":["React","useState","useEffect","Route","Switch","useParams","axios","Home","Recipe","RecipeList","App","key","apiId","data","setData","hits","query","setQuery","getRecipe","get","then","res","console","log","catch","err","changeHandler","e","target","value","map","item","recipe","image","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,GAAG,GAAG,kCAAZ;AACA,QAAMC,KAAK,GAAG,UAAd;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAACc,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,SAAD,CAAlC,CANgB,CAQhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMgB,SAAS,GAAG,MAAM;AACtBZ,MAAAA,KAAK,CAACa,GAAN,CAAW,mCAAkCH,KAAM,WAAUJ,KAAM,YAAWD,GAAI,EAAlF,EACCS,IADD,CACOC,GAAD,IAAS;AACbP,QAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,OAJD,EAKCW,KALD,CAKQC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OAPD;AAQD,KATD;;AAWAP,IAAAA,SAAS;AAEV,GAfQ,EAeN,CAACF,KAAD,CAfM,CAAT,CATgB,CAwBJ;;AAEZ,QAAMU,aAAa,GAAGC,CAAC,IAAI;AACzBV,IAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAGA,sBAEI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEG;AACG,MAAA,KAAK,EAAEb,KADV;AAEG,MAAA,QAAQ,EAAEU;AAFb;AAAA;AAAA;AAAA;AAAA,YAFH,EAOCb,IAAI,CAACE,IAAL,CAAUe,GAAV,CAAcC,IAAI,IAAI;AACrB,0BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,MAAL,CAAYC,KADrB;AAEE,QAAA,IAAI,EAAEF,IAAI,CAACC,MAAL,CAAYE,KAFpB;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,EAAE,EAAEH,IAAI,CAACC,MAAL,CAAYE;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAPD,eAiBE,QAAC,MAAD;AAAA,8BAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,gBAAlB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAErB,IAAI,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4BD,CAzDD;;GAAMC,G;;KAAAA,G;AA2DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './components/Home';\nimport Recipe from \"./components/Recipe\";\nimport RecipeList from \"./components/RecipeList\";\n\nconst App = () => {\n\n  const key = '37f23969e9634c3fde3c44a641daf99c';\n  const apiId = '37885762';\n\n  const [data, setData] = useState({hits: [] })\n  const [query, setQuery] = useState('lobster')\n\n  // This effect will fire when the component mounts, AND each time \"query\" is updated!\n  useEffect(() => {\n\n    const getRecipe = () => {\n      axios.get(`https://api.edamam.com/search?q=${query}&app_id=${apiId}&app_key=${key}`)\n      .then((res) => {\n        setData(res.data)\n        console.log(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    }\n    \n    getRecipe();\n\n  }, [query]) // Effect sybced with query; when query changes, fire this effect again\n\n  const changeHandler = e => {\n    setQuery(e.target.value)\n  }\n  return (\n\n      <div>\n        <h1>Recipe Search</h1>\n         <input\n            value={query}\n            onChange={changeHandler}\n          />\n        \n      {data.hits.map(item => {\n        return (\n          <RecipeList \n            image={item.recipe.image}\n            name={item.recipe.label}\n            view='View Recipe'\n            id={item.recipe.label}\n            />\n        )\n      })}\n        <Switch>\n          {/* <Route exact path='/' component={Home}/> */}\n          <Route exact path='/recipes/:dish'>\n            <Recipe food={data.hits}/>\n          </Route>\n          <Route component={RecipeList}/>\n        </Switch>\n      </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}